<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ricky.travel.dao.AdminUserMapper" >
  <resultMap id="BaseResultMap" type="com.ricky.travel.domain.AdminUser" >
    <id column="Admin_Id" property="adminId" jdbcType="INTEGER" />
    <result column="Admin_Account" property="adminAccount" jdbcType="CHAR" />
    <result column="Admin_Password" property="adminPassword" jdbcType="VARCHAR" />
    <result column="Admin_Level" property="adminLevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Admin_Id, Admin_Account, Admin_Password, Admin_Level
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ricky.travel.domain.AdminUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from admin_user
    where Admin_Id = #{adminId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from admin_user
    where Admin_Id = #{adminId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ricky.travel.domain.AdminUserExample" >
    delete from admin_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ricky.travel.domain.AdminUser" useGeneratedKeys="true" keyProperty="id" >
    insert into admin_user (Admin_Id, Admin_Account, Admin_Password, 
      Admin_Level)
    values (#{adminId,jdbcType=INTEGER}, #{adminAccount,jdbcType=CHAR}, #{adminPassword,jdbcType=VARCHAR}, 
      #{adminLevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ricky.travel.domain.AdminUser" useGeneratedKeys="true" keyProperty="id" >
    insert into admin_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        Admin_Id,
      </if>
      <if test="adminAccount != null" >
        Admin_Account,
      </if>
      <if test="adminPassword != null" >
        Admin_Password,
      </if>
      <if test="adminLevel != null" >
        Admin_Level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminAccount != null" >
        #{adminAccount,jdbcType=CHAR},
      </if>
      <if test="adminPassword != null" >
        #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="adminLevel != null" >
        #{adminLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ricky.travel.domain.AdminUserExample" resultType="java.lang.Integer" >
    select count(*) from admin_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update admin_user
    <set >
      <if test="record.adminId != null" >
        Admin_Id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.adminAccount != null" >
        Admin_Account = #{record.adminAccount,jdbcType=CHAR},
      </if>
      <if test="record.adminPassword != null" >
        Admin_Password = #{record.adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.adminLevel != null" >
        Admin_Level = #{record.adminLevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update admin_user
    set Admin_Id = #{record.adminId,jdbcType=INTEGER},
      Admin_Account = #{record.adminAccount,jdbcType=CHAR},
      Admin_Password = #{record.adminPassword,jdbcType=VARCHAR},
      Admin_Level = #{record.adminLevel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ricky.travel.domain.AdminUser" >
    update admin_user
    <set >
      <if test="adminAccount != null" >
        Admin_Account = #{adminAccount,jdbcType=CHAR},
      </if>
      <if test="adminPassword != null" >
        Admin_Password = #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="adminLevel != null" >
        Admin_Level = #{adminLevel,jdbcType=INTEGER},
      </if>
    </set>
    where Admin_Id = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ricky.travel.domain.AdminUser" >
    update admin_user
    set Admin_Account = #{adminAccount,jdbcType=CHAR},
      Admin_Password = #{adminPassword,jdbcType=VARCHAR},
      Admin_Level = #{adminLevel,jdbcType=INTEGER}
    where Admin_Id = #{adminId,jdbcType=INTEGER}
  </update>


  <select id="validate" parameterType="com.ricky.travel.domain.AdminUser" resultType="int">
    select count(*)
      from admin_user a
    where
      a.Admin_Account=#{adminAccount}
      and a.Admin_Password=#{adminPassword}
  </select>
</mapper>